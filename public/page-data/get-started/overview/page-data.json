{"componentChunkName":"component---src-templates-topic-js","path":"/get-started/overview","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Overview\",\n  \"date\": null,\n  \"path\": \"/get-started/overview\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This documentation template project uses Gatsby and a few plugins to create content.\"), mdx(\"p\", null, \"See the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/tutorials/demo-post\"\n  }, \"demo page\"), \" for an example of components and styles.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Content Authoring:\"), \" Content pages use Markdown syntax in MDX files so that you can focus on writing while still using components when they're handy.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Styles:\"), \" Styles primarily come from the global.css file. CSS custom properties make themeing and editing styles simple. A few pages and components also use styled-components. This makes it easy to customize some components as needed without cluttering the global css file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Site Navigation\"), \": The side-bar navigation is built using the toc.yaml file. As it is set up currently, this requires a little manual work when adding or removing links, but it provides good customization for re-ordering things.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"SEO\"), \": The site uses React Helmet for SEO. Pass props to the SEO component to override defaults. This component is also used to set the theme with React Context.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":null,"path":"/get-started/overview","title":"Overview"},"tableOfContents":{}}},"pageContext":{"slug":"/get-started/overview"}},"staticQueryHashes":["3000541721"]}